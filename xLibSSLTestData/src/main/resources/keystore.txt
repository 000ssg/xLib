Command to create: 

keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650

Password: passw0rd

keystore.p12 -> tomcat

keystore_abc.p12 -> key_a, key_b, key_c, key_s (a,b,c,s - server)


////
set TS_DOMAIN=localhost
keytool  -genkey -noprompt -trustcacerts -keyalg RSA -alias cert -dname %TS_DOMAIN -storetype PKCS12 -keypass passw0rd -keystore localhost_abc.p12 -storepass passw0rd -dname CN=%TS_DOMAIN
keytool -export -keystore localhost_abc.p12 -alias cert -file localhost.abc.cert


///
keytool -genkeypair -v -alias localhost_abc -dname "CN=localhostCA, OU=Local host, O=LocalHost, L=Localhost, ST=Localhost, C=US" -keystore localhost_abc_.p12 -keypass passw0rd -storetype PKCS12 -storepass passw0rd -keyalg RSA -keysize 4096 -ext KeyUsage="keyCertSign" -ext BasicConstraints:"critical=ca:true" -validity 9999
keytool -export -v  -alias localhost_abc -file localhost_abc_.crt  -keypass passw0rd -storepass passw0rd -keystore localhost_abc_.p12 -rfc

//////////
keytool -genkeypair -v -alias key_a -dname "CN=A, OU=A, O=A, L=A, ST=A, C=AA" -keystore localhost__abc.p12 -keypass passw0rd -storetype PKCS12 -storepass passw0rd -keyalg RSA -keysize 4096 -ext KeyUsage="keyCertSign" -ext BasicConstraints:"critical=ca:true" -validity 9999
keytool -genkeypair -v -alias key_b -dname "CN=B, OU=B, O=B, L=B, ST=B, C=BB" -keystore localhost__abc.p12 -keypass passw0rd -storetype PKCS12 -storepass passw0rd -keyalg RSA -keysize 4096 -ext KeyUsage="keyCertSign" -ext BasicConstraints:"critical=ca:true" -validity 9999
keytool -genkeypair -v -alias key_c -dname "CN=C, OU=C, O=C, L=C, ST=C, C=CC" -keystore localhost__abc.p12 -keypass passw0rd -storetype PKCS12 -storepass passw0rd -keyalg RSA -keysize 4096 -ext KeyUsage="keyCertSign" -ext BasicConstraints:"critical=ca:true" -validity 9999
keytool -genkeypair -v -alias key_s -dname "CN=S, OU=S, O=S, L=S, ST=S, C=SS" -keystore localhost__abc.p12 -keypass passw0rd -storetype PKCS12 -storepass passw0rd -keyalg RSA -keysize 4096 -ext KeyUsage="keyCertSign" -ext BasicConstraints:"critical=ca:true" -validity 9999

keytool -export -v  -alias key_a -file key_a.crt  -keypass passw0rd -storepass passw0rd -keystore localhost__abc.p12 -rfc
keytool -export -v  -alias key_b -file key_b.crt  -keypass passw0rd -storepass passw0rd -keystore localhost__abc.p12 -rfc
keytool -export -v  -alias key_c -file key_c.crt  -keypass passw0rd -storepass passw0rd -keystore localhost__abc.p12 -rfc
keytool -export -v  -alias key_s -file key_s.crt  -keypass passw0rd -storepass passw0rd -keystore localhost__abc.p12 -rfc

keytool -import -alias key_a -storepass passw0rd -keystore localhost__abc_ts.p12 -file key_a.crt
keytool -import -alias key_b -storepass passw0rd -keystore localhost__abc_ts.p12 -file key_b.crt
keytool -import -alias key_c -storepass passw0rd -keystore localhost__abc_ts.p12 -file key_c.crt
keytool -import -alias key_s -storepass passw0rd -keystore localhost__abc_ts.p12 -file key_s.crt




-> EJBCA as CA

#keytool –certreq –keystore keystore_abc.p12 -storepass passw0rd -keypass passw0rd –alias key_a –keyalg rsa –file key_a.csr
keytool -certreq -rfc -alias key_a -keystore keystore_abc.p12 -storepass passw0rd >key_a.csr
keytool -certreq -rfc -alias key_b -keystore keystore_abc.p12 -storepass passw0rd >key_b.csr
keytool -certreq -rfc -alias key_c -keystore keystore_abc.p12 -storepass passw0rd >key_c.csr
keytool -certreq -rfc -alias key_s -keystore keystore_abc.p12 -storepass passw0rd >key_s.csr

-> EJBCA -> create from .csr A,B,C,S

keytool -import -alias CARoot -keystore keystore_abc.p12 -storepass passw0rd -file ManagementCA-chain.pem
keytool -import -alias k_a -keystore keystore_abc.p12 -storepass passw0rd -file A.pem
keytool -import -alias k_b -keystore keystore_abc.p12 -storepass passw0rd -file B.pem
keytool -import -alias k_c -keystore keystore_abc.p12 -storepass passw0rd -file S.pem

